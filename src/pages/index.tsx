import Head from "next/head";
import { Inter } from "next/font/google";
import { FormEvent, useState } from "react";
import endent from "endent";
import { Answer } from "@/components/Answer";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [query, setQuery] = useState("");
  const [answer, setAnswer] = useState("");
  const [domain, setDomain] = useState("");

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    setAnswer("");

    const searchRes = await fetch("/api/search", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        query,
        matches: 3,
      }),
    });

    if (!searchRes.ok) {
      throw Error(searchRes.statusText);
      return;
    }

    const results = await searchRes.json();

    const prompt = endent`
    Use the following passages to provide an answer to the query: "${query}"
    ${results?.map((d: any) => d.content).join("\n\n")}
    `;

    const answerResponse = await fetch("/api/answer", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ prompt }),
    });

    if (!answerResponse.ok) {
      throw new Error(answerResponse.statusText);
    }

    const data = answerResponse.body;

    if (!data) {
      return;
    }

    const reader = data.getReader();
    const decoder = new TextDecoder();

    let done = false;

    while (!done) {
      const { value, done: doneReading } = await reader.read();
      done = doneReading;
      const chunkValue = decoder.decode(value);
      setAnswer((prev) => prev + chunkValue);
    }
  };

  const handleDomainSubmit = async (e: FormEvent<HTMLFormElement>) => {
    // Prevent the browser from reloading the page
    e.preventDefault();

    const res = await fetch("/api/domain", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        domain
      }),
    });

    const json = await res.json();
    console.log(json);
  };

  return (
    <>
      <Head>
        <title>SiteBot</title>
        <meta name="description" content="Generated by create next app" />
        <meta
          name="viewport"
          content="height=device-hight, width=device-width, initial-scale=1"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={inter.className}>
        <div className="max-w-4xl mx-auto">
          <h1>SiteBot</h1>
          <form className="flex flex-col gap-4" onSubmit={handleSubmit}>
            <input
              className="border rounded-lg border-gray-800 w-full px-2 py-1"
              type="text"
              name="query"
              value={query}
              onChange={({ target }) => setQuery(target.value)}
              placeholder="Enter your query here"
            />
            <button
              type="submit"
              className="border border-gray-800 bg-gray-600 text-neutral-200 rounded-lg px-2 py-1"
            >
              Submit
            </button>
          </form>
          <form onSubmit={handleDomainSubmit}>
            <input
              name="domain"
              type="url"
              value={domain}
              onChange={({ target }) => setDomain(target.value)}
              placeholder="Enter your domain name"
            />
            <button type="submit">Submit</button>
          </form>

          <div className="mt-4">
            <Answer text={answer} />
          </div>
        </div>
      </main>
    </>
  );
}
